###############################################################
# Copyright (c) 2021 Robert Bosch Manufacturing Solutions GmbH
# Copyright (c) 2021 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

{{- $deployment_name := printf "cx-%s-hub" .Release.Name }}
{{- $sec_name := printf "%s-sec" $deployment_name }}
{{- $svc_name := printf "%s-svc" $deployment_name }}
{{- $graphdb_svc_name := printf "cx-%s-graphdb-svc" .Release.Name }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hub.fullname" . }}
  labels:
    {{- include "hub.labels" . | nindent 4 }}
spec:
  replicas: {{ default 1 .Values.hub.replicaCount | int }}
  selector:
    matchLabels:
      {{- include "hub.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "hub.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        runAsUser: 100
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.hub.image.registry }}/{{ .Values.hub.image.repository }}:{{ .Values.hub.image.version | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.hub.imagePullPolicy }}
          securityContext:
            runAsUser: 100
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          {{- if not .Values.hub.authentication }}
          args: ["--spring.profiles.active=local"]
          {{- end }}
          ports:
            - containerPort: {{ .Values.hub.containerPort | int }}
          env:
            - name: HUB_TRIPLE_STORE_EMBEDDED_ENABLED
              value: "{{ .Values.hub.embeddedTripleStore }}"
            - name: HUB_TRIPLE_STORE_BASE_URL
              {{- if .Values.graphdb.enabled }}
              value: {{ printf "http://%s-graphdb:%v" (include "hub.fullname" .) .Values.graphdb.service.port }}/ds
              {{- else }}
              value: {{ .Values.hub.graphdbBaseUrl }}
              {{- end }}
            - name: HUB_TRIPLE_STORE_QUERY_ENDPOINT
              value: {{ .Values.graphdb.queryEndpoint }}
            - name: HUB_TRIPLE_STORE_UPDATE_ENDPOINT
              value: {{ .Values.graphdb.updateEndpoint }}
          envFrom:
            - secretRef:
                name: {{ include "hub.fullname" . }}
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: {{ .Values.hub.containerPort }}
            initialDelaySeconds: {{ .Values.hub.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.hub.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.hub.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: {{ .Values.hub.containerPort }}
            initialDelaySeconds: {{ .Values.hub.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.hub.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.hub.readinessProbe.failureThreshold }}
          resources:
{{ .Values.hub.resources | toYaml | indent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: empty-tmp
      volumes:
        - name: empty-tmp
          emptyDir: {}
      imagePullSecrets:
{{ .Values.hub.imagePullSecrets | toYaml | indent 8 }}

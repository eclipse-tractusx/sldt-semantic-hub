###############################################################
# Copyright (c) 2025 Robert Bosch Manufacturing Solutions GmbH
# Copyright (c) 2025 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

nameOverride:
fullnameOverride:
# enables the default keycloak identity provider
enableKeycloak: false

hub:
  image:
    registry: docker.io
    repository: tractusx/sldt-semantic-hub
    # This version property overwrites the default image version. The default image version is the appVersion of the Chart.yaml.
    version: ""
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  containerPort: 4242
  ## Use in-memory triple store that is not persistent
  embeddedTripleStore: false
  host: minikube
  ## If 'authentication' is set to false, no OAuth authentication is enforced
  authentication: false
  # Issuer url for the hub (resource server),
  # make sure that the url points to an externally resolvable hostname.
  # If no value is committed, and the integrated Keycloak is enabled,
  # the K8s internal service name is used, which is a problem, when
  # validating the issuer claim in an access token
  idpIssuerUri: ""
  idpClientId: default-client
  ## Ignored if 'graphdb.enabled' is set to true
  graphdbBaseUrl: http://graphdb:3030
  service:
    port: 8080
    type: ClusterIP
  livenessProbe:
    failureThreshold: 3
    periodSeconds: 3
    initialDelaySeconds: 100
  readinessProbe:
    failureThreshold: 3
    periodSeconds: 3
    initialDelaySeconds: 100
  ingress:
    ## Enable ingress for the Semantic Hub
    enabled: false
    ## Enable TLS (e.g. by using cert-manager)
    tls: true
    ## The secret name that contains the necessary 'tls.crt' and 'tls.key' entries
    ## When using cert-manager this secret is created automatically
    tlsSecretName: ""
    urlPrefix: /semantics/hub
    className: ""
    annotations: []
  resources:
    limits:
      cpu: 750m
      memory: 1024Mi
    requests:
      cpu: 250m
      memory: 1024Mi

graphdb:
  ## Include Fuski deployment or deploy separately
  enabled: false
  image: jena-fuseki-docker:5.0.0
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  containerPort: 3030
  queryEndpoint: query
  updateEndpoint: update
  username: admin
  password:
  javaOptions: "-Xmx1048m -Xms1048m"
  args: ["--tdb2", "--update", "--loc", "databases/", "/ds"]
  storageClassName: default
  storageSize: 50Gi
  pvcAccessModes:
    - ReadWriteOnce
  resources:
    limits:
      memory: "1024Mi"
    requests:
      memory: "512Mi"
  service:
    port: 3030

keycloak:
  postgresql:
    enabled: false
  auth:
    adminUser:
    adminPassword:
  service:
    type: ClusterIP
  extraVolumes:
    - name: init-script-vol
      configMap:
        name: init-script-vol
  # Mounting a keycloak realm configuration file
  fullnameOverride: hub-keycloak
  extraVolumeMounts:
    - mountPath: /opt/keycloak/data/import/default-realm-import.json
      subPath: default-realm-import.json
      name: init-script-vol
  # Using a pre-configured Keycloak with a default realm,
  # containing a test client and user with the necessary roles to
  # authorize requests to the semantic hub.
  # Make sure to remove the '--hostname' property when deploying
  # in a non-test scenario
  command: ["/bin/sh", "-c"]
  args: ["kc.sh import --file /opt/keycloak/data/import/default-realm-import.json; kc.sh start-dev --hostname=registry-keycloak --hostname-strict=false --proxy=edge --proxy=edge"]
